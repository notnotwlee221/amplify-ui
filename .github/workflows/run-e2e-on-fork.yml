name: Run E2E on Fork

on:
  workflow_run:
    workflows: [Receive Fork Review]
    types:
      - completed

jobs:
  # check if approver has write/admin permissions
  check-write-access:
    runs-on: ubuntu-latest
    steps:
      - name: 'Get user permissions to check if it is either "write" or "admin"'
        id: get-permissions
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        with:
          result-encoding: string
          script: |
            var { data } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: '${{ github.event.sender.login }}'
            })
            console.log('data.permission:', data.permission);
            return data.permission;
      - name: 'Fail this workflow if user does not have write permissions'
        if: ${{ steps.get-permissions.outputs.result != 'write' && steps.get-permissions.outputs.result != 'admin' }}
        run: |
          echo "${{ steps.get-permissions.outputs.result }}"
          exit 1
  setup:
    needs: check-write-access
    runs-on: ubuntu-latest
    # check if receive-fork-review workflow completed successfully
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "commit"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/commit.zip', Buffer.from(download.data));
      - run: unzip commit.zip
      - name: 'Read from artifact zip'
        uses: actions/github-script@v3.1.0
        id: read-artifact
        with:
          result-encoding: string
          script: |
            var fs = require('fs');
            var commit_id = fs.readFileSync('./commit_id', 'utf-8');
            return commit_id.replace(/(\r\n|\n|\r)/gm, "");
      # create status
      - name: Add status to PR
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        env:
          sha: ${{ steps.read-artifact.outputs.result }}
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          run_id: ${{ github.run_id }}
        with:
          result-encoding: string
          script: |
            const { sha, owner, repo, run_id } = process.env;
            github.rest.repos.createCommitStatus({
               owner,
               repo,
               sha,
               state: 'pending',
               context: 'Run E2E tests',
               description: 'E2E tests are now running',
               target_url: `https://github.com/${owner}/${repo}/actions/runs/${run_id}`
            });
      - name: Sleep 10 seconds
        run: exit 1;
        shell: bash
  setup-cache:
    needs: setup
    uses: wlee221/amplify-ui/.github/workflows/reusable-setup-cache.yml@main
    with:
      commit: ${{ github.sha }}
      repository: ${{ github.repository }}

  e2e:
    uses: wlee221/amplify-ui/.github/workflows/reusable-e2e.yml@main
    needs: setup-cache
    with:
      commit: ${{ github.event.pull_request.head.sha }}
      repository: ${{ github.event.pull_request.head.repo.full_name }}
    secrets:
      AUTH_E2E_ROLE_ARN: ${{ secrets.AUTH_E2E_ROLE_ARN }}
      DATASTORE_E2E_ROLE_ARN: ${{ secrets.DATASTORE_E2E_ROLE_ARN }}
      GEO_E2E_ROLE_ARN: ${{ secrets.GEO_E2E_ROLE_ARN }}
      STORAGE_E2E_ROLE_ARN: ${{ secrets.STORAGE_E2E_ROLE_ARN }}
      IN_APP_MESSAGING_E2E_ROLE_ARN: ${{ secrets.IN_APP_MESSAGING_E2E_ROLE_ARN }}
      DOMAIN: ${{ secrets.DOMAIN }}
      PHONE_NUMBER: ${{ secrets.PHONE_NUMBER }}
      USERNAME: ${{ secrets.USERNAME }}
      NEW_PASSWORD: ${{ secrets.NEW_PASSWORD }}
      VALID_PASSWORD: ${{ secrets.VALID_PASSWORD }}
      SITE_URL: ${{ secrets.SITE_URL }}
      DOCSEARCH_DOCS_APP_ID: ${{ secrets.DOCSEARCH_DOCS_APP_ID }}
      DOCSEARCH_DOCS_API_KEY: ${{ secrets.DOCSEARCH_DOCS_API_KEY }}
      DOCSEARCH_DOCS_INDEX_NAME: ${{ secrets.DOCSEARCH_DOCS_INDEX_NAME }}

  update-success-status:
    if: ${{ success() }}
    needs: e2e
    runs-on: ubuntu-latest
    steps:
      - name: Update status when E2E tests are successful
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        env:
          sha: ${{ steps.read-artifact.outputs.result }}
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          run_id: ${{ github.run_id }}
        with:
          result-encoding: string
          script: |
            const { sha, owner, repo, run_id } = process.env;
            github.rest.repos.createCommitStatus({
               owner,
               repo,
               sha,
               state: 'success',
               context: 'Run E2E tests',
               description: 'E2E tests have finished running',
               target_url: `https://github.com/${owner}/${repo}/actions/runs/${run_id}`
            });

  update-failure-status:
    if: ${{ failure() }}
    needs: e2e
    runs-on: ubuntu-latest
    steps:
      - name: Update status when E2E tests are not successful
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        env:
          sha: ${{ steps.read-artifact.outputs.result }}
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          run_id: ${{ github.run_id }}
        with:
          result-encoding: string
          script: |
            const { sha, owner, repo, run_id } = process.env;
            github.rest.repos.createCommitStatus({
               owner,
               repo,
               sha,
               state: 'failure',
               context: 'Run E2E tests',
               description: 'E2E tests have failed',
               target_url: `https://github.com/${owner}/${repo}/actions/runs/${run_id}`
            });
